version: '3.8'

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    volumes:
      - ./backend/:/backend/
    command: uvicorn src.main:app --reload --host 0.0.0.0 --port 8000 #0.0.0.0 -> wichtig
    environment:
      # POSTGRES_HOSTNAME: host.docker.internal
      # comment above and uncomment below to use db running with docker-compose
      POSTGRES_HOSTNAME: db_service
    ports:
      - 8000:8000
    depends_on:
      #wait for db initialisation
      - db_service

  db_service:
    image: postgres:alpine
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: challenge-accepted
    volumes:
      - db_save:/var/lib/postgresql/data
    ports:
      - 5432:5432

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin4_container
    restart: always
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: challenge-accepted@gmail.com
      PGADMIN_DEFAULT_PASSWORD: password
      # PGADMIN_CONFIG_SERVER_MODE: "False"
      PGADMIN_CONFIG_SERVER_MODE: 'False'
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: "False"
    volumes:
      - pgadmin-data:/var/lib/pgadmin

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    volumes:
      - ./frontend:/frontend
    ports:
      - 80:80
      - 443:443
    depends_on:
      #wait for db initialisation
      - backend

  # nginx:
  #   image: nginx:latest
  #   restart: unless-stopped
  #   volumes:
  #     - ./frontend/nginx/conf.d:/etc/nginx/conf.d
  #     - ./frontend/nginx/ssl:/etc/nginx/ssl/
  #     - ./data/certbot/www:/var/www/certbot
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   depends_on:
  #     - client
  #   command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

volumes:
  db_save:
  pgadmin-data:
