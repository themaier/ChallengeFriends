version: '3.8'

services:
  backend:
    container_name: backend
    build:
      context: ./backend
      dockerfile: Dockerfile
    volumes:
      - ./backend/:/backend/
    command: uvicorn src.main:app --reload --host 0.0.0.0 --port 8000 #0.0.0.0 -> wichtig
    environment:
      # POSTGRES_HOSTNAME: host.docker.internal
      # comment above and uncomment below to use db running with docker-compose
      POSTGRES_HOSTNAME: db_service
    ports:
      - 8000:8000
    depends_on:
      - db_service

  db_service:
    container_name: database
    image: postgres:alpine
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: challenge-accepted
    volumes:
      - db_save:/var/lib/postgresql/data
    ports:
      - 5432:5432

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    restart: always
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: challenge-accepted@gmail.com
      PGADMIN_DEFAULT_PASSWORD: password
      # PGADMIN_CONFIG_SERVER_MODE: "False"
      PGADMIN_CONFIG_SERVER_MODE: 'False'
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: "False"
    volumes:
      - pgadmin-data:/var/lib/pgadmin

  frontend:
    container_name: frontend_proxy
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    ports:
      - 80:80
      - 443:443
    depends_on:
      - backend
    volumes:
      - ./frontend/nginx/prod.conf:/etc/nginx/nginx.conf
      - ./frontend/nginx/privkey.pem:/etc/nginx/ssl/
      - ./frontend/nginx/fullchain.pem:/etc/nginx/ssl/
    extra_hosts: #need for linux
      - "host.docker.internal:host-gateway"

volumes:
  db_save:
  pgadmin-data:
